version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 20.17.0 # Make sure this matches your local Node.js version (e.g., 16, 20)
    commands:
      # Clean npm cache and node_modules for a fresh install
      - echo "Cleaning npm cache and node_modules for frontend..."
      - cd frontend
      - npm cache clean --force
      - rm -rf node_modules
      - echo "Installing frontend dependencies (verbose)..."
      - npm install --verbose # Added --verbose for more detailed logs
      - cd .. # Go back to the repository root

      - echo "Cleaning npm cache and node_modules for backend..."
      - cd backend
      - npm cache clean --force
      - rm -rf node_modules
      - echo "Installing backend dependencies (verbose)..."
      - npm install --verbose # Added --verbose for more detailed logs
      - cd .. # Go back to the repository root

  build:
    commands:
      - echo "Building frontend (Vite) with verbose output..."
      - cd frontend
      - npm run build --verbose # Added --verbose for more detailed logs
      - cd ..

      - echo "Backend has no specific build step, ensuring dependencies are in place."

  post_build:
    commands:
      - echo "Build completed successfully (POST_BUILD phase)."
      - echo "Initiating CloudFront cache invalidation..."
      # IMPORTANT: Replace YOUR_CLOUDFRONT_DISTRIBUTION_ID with your actual CloudFront Distribution ID
      - aws cloudfront create-invalidation --distribution-id YOUR_CLOUDFRONT_DISTRIBUTION_ID --paths "/index.html" "/*"
      - echo "CloudFront invalidation command issued."

artifacts:
  files:
    - '**/*'
  base-directory: .
  discard-paths: no